#!/usr/bin/env python

#
#Copyright (c) 2015-2021, NVIDIA CORPORATION.
#SPDX-License-Identifier: Apache-2.0

import errno
import kmip.core.enums
import kmip.pie.client
import kmip.pie.exceptions
import logging
import socket
import sys
import time

logging.basicConfig(level=logging.INFO)


def main():
    with kmip.pie.client.ProxyKmipClient() as client:
        for i in range(3):
            secret_id = str(i + 1)
            try:
                client.get(secret_id)
            except kmip.pie.exceptions.KmipOperationFailure as e:
                if e.reason != kmip.core.enums.ResultReason.ITEM_NOT_FOUND:
                    raise
                client.create(kmip.core.enums.CryptographicAlgorithm.AES, 256)
                logging.info('KEY %s CREATED', secret_id)
            else:
                logging.info('KEY %s FOUND', secret_id)


if __name__ == "__main__":
    try:
        sys.exit(main())
    except socket.error as e:
        if e.errno != errno.ECONNREFUSED:
            raise
        # Give the kmip server more of a chance to start up
        time.sleep(3)
        sys.exit(main())
